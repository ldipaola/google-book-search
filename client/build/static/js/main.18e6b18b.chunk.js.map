{"version":3,"sources":["components/Hero.js","components/Nav.js","utils/api.js","components/BookCard.js","components/SavedSearch.js","pages/Saved.js","utils/booksContext.js","components/SearchBar.js","components/SearchResults.js","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["Hero","className","style","display","alignItems","justifyContent","flexDirection","Nav","to","axios","get","id","delete","bookData","post","BookCard","props","src","image","alt","title","author","description","href","link","target","rel","data-value","onClick","SavedSearch","useState","savedBooks","setSavedBooks","deletedBook","setDeletedBook","handleClick","e","preventDefault","console","log","currentTarget","dataset","value","api","then","data","useEffect","map","book","key","_id","authors","catch","err","Saved","BooksContext","createContext","SearchBar","search","setSearch","setBooks","useContext","handleSubmit","a","bookSearch","totalItems","handleKeyPress","marginTop","type","placeholder","onKeyPress","onChange","trim","SearchResults","books","booksToRender","bookToSave","items","find","element","volumeInfo","imageLinks","thumbnail","infoLink","publisher","alert","shortid","generate","undefined","subtitle","marginBottom","Search","useMemo","Provider","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.18e6b18b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Hero() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"hero bg-gray\">\r\n        <div className=\"hero-body\" style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\"}}>\r\n          <h1>Google Books Search</h1>\r\n          <p>Search for and save books of interest</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <div className=\"container\">\r\n        <header className=\"navbar\">\r\n          <section className=\"navbar-section\">\r\n            <Link to=\"/\" className=\"navbar-brand mr-2\">\r\n              Google Book Search\r\n            </Link>\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              Search\r\n            </Link>\r\n            <Link to=\"/saved\" className=\"btn btn-link\">\r\n              Saved\r\n            </Link>\r\n          </section>\r\n        </header>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};","import React from 'react';\r\n\r\n\r\nexport default function BookCard(props) {\r\n\r\n    return (\r\n      <div className=\"card search results\">\r\n        <div className=\"card-image\">\r\n          <img\r\n            src={props.image}\r\n            className=\"img-responsive\" alt=\"book cover\"\r\n          />\r\n        </div>\r\n        <div className=\"card-header\">\r\n          <div className=\"card-title h5\">{props.title}</div>\r\n          <div className=\"card-subtitle text-gray\">\r\n            {props.author}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">{props.description}</div>\r\n        <div className=\"card-footer\">\r\n          <a\r\n            className=\"btn btn-primary\"\r\n            href={props.link} target=\"_blank\" rel=\"noopener noreferrer\"\r\n          >\r\n            View\r\n          </a>\r\n          <button className=\"btn btn-primary\" data-value={props.id}  onClick={props.onClick}>Delete</button>\r\n        </div>\r\n      </div>  \r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../utils/api\";\r\nimport BookCard from \"../components/BookCard\";\r\n\r\nexport default function SavedSearch() {\r\n  const [savedBooks, setSavedBooks] = useState();\r\n  const [deletedBook, setDeletedBook] = useState();\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.currentTarget.dataset.value);\r\n    api.deleteBook(e.currentTarget.dataset.value).then((data) => {\r\n      setDeletedBook(data.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getBooks()\r\n      .then((data) => {\r\n        setSavedBooks(\r\n          data.data.map((book) => (\r\n            <BookCard\r\n              key={book._id}\r\n              id={book._id}\r\n              title={book.title}\r\n              author={book.authors}\r\n              description={book.description}\r\n              image={book.image}\r\n              link={book.link}\r\n              onClick={handleClick}\r\n            />\r\n          ))\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [deletedBook]);\r\n\r\n  return <div>{savedBooks}</div>;\r\n}\r\n","import React from \"react\";\r\nimport SavedSearch from \"../components/SavedSearch\";\r\n\r\nexport default function Saved() {\r\n  return (\r\n    <div>\r\n      <SavedSearch />\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst BooksContext = createContext(null);\r\n\r\nexport default BooksContext;\r\n","import React, {useState, useContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport BooksContext from \"../utils/booksContext\";\r\n\r\nexport default function SearchBar() {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { setBooks } = useContext(BooksContext);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const bookSearch = await axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+search+\"intitle\");\r\n    if (bookSearch.data.totalItems > 0) setBooks(bookSearch);\r\n\r\n    else {setBooks(\"No Results\")}\r\n  }\r\n\r\n  const handleKeyPress = async (e) => {\r\n    if(e.key === \"Enter\"){\r\n      \r\n    const bookSearch = await axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+search+\"+intitle&printType=books\");\r\n    if (bookSearch.data.totalItems > 0) setBooks(bookSearch);\r\n    else {setBooks(\"No Results\")}\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{marginTop:\"8px\"}}>\r\n      <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <div className=\"card-title h5\">Book Search</div>\r\n        <div className=\"card-subtitle text-gray\">Book</div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n      <div className=\"input-group \">\r\n          <input className=\"form-input\" type=\"text\" placeholder=\"search\" onKeyPress={handleKeyPress} onChange={(e) => setSearch(e.target.value.trim())} />\r\n          <button className=\"btn btn-primary input-group-btn\" onClick={handleSubmit}>Search</button>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport BooksContext from \"../utils/booksContext\";\r\nimport shortid from \"shortid\";\r\nimport api from \"../utils/api\";\r\nimport \"./searchResults.css\";\r\n\r\nexport default function SearchResults() {\r\n  const { books } = useContext(BooksContext);\r\n  let booksToRender = \"\";\r\n  const handleClick = function (e) {\r\n    e.preventDefault();\r\n    const bookToSave = books.data.items.find(\r\n      (element) => element.id === e.currentTarget.dataset.value\r\n    );\r\n    let bookData = \"\";\r\n    console.log(bookToSave);\r\n    if (bookToSave.volumeInfo.authors) {\r\n      bookData = {\r\n        title: bookToSave.volumeInfo.title,\r\n        authors: [...bookToSave.volumeInfo.authors],\r\n        description: bookToSave.volumeInfo.description,\r\n        image: bookToSave.volumeInfo.imageLinks.thumbnail,\r\n        link: bookToSave.volumeInfo.infoLink,\r\n      };\r\n    } else if (!bookToSave.volumeInfo.authors) {\r\n      bookData = {\r\n        title: bookToSave.volumeInfo.title,\r\n        authors: [...bookToSave.volumeInfo.publisher],\r\n        description: bookToSave.volumeInfo.description,\r\n        image: bookToSave.volumeInfo.imageLinks.thumbnail,\r\n        link: bookToSave.volumeInfo.infoLink,\r\n      };\r\n    }\r\n    api.saveBook(bookData).then((book) => alert(\"Saved\"));\r\n  };\r\n\r\n  if (books && books !== \"No Results\") {\r\n    booksToRender = books.data.items.map((book) => (\r\n      <div key={shortid.generate()} className=\"card search results\">\r\n        <div className=\"card-image\">\r\n          <img\r\n            src={\r\n              book.volumeInfo.imageLinks === undefined\r\n                ? \"\"\r\n                : book.volumeInfo.imageLinks.thumbnail\r\n            }\r\n            className=\"img-responsive\"\r\n            alt=\"book cover\"\r\n          />\r\n        </div>\r\n        <div className=\"card-header\">\r\n          <div className=\"card-title h5\">{book.volumeInfo.title}</div>\r\n          <div className=\"card-subtitle text-gray\">\r\n            {book.volumeInfo.subtitle}\r\n          </div>\r\n          <div className=\"card-subtitle text-gray\">\r\n            {book.volumeInfo.authors ? (\r\n              book.volumeInfo.authors.map((author) => (\r\n                <p key={shortid.generate()} style={{ marginBottom: \"0px\" }}>\r\n                  {author}\r\n                </p>\r\n              ))\r\n            ) : (\r\n              <p key={shortid.generate()} style={{ marginBottom: \"0px\" }}>\r\n                {book.volumeInfo.publisher}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">{book.volumeInfo.description}</div>\r\n        <div className=\"card-footer\">\r\n          <a\r\n            className=\"btn btn-primary\"\r\n            href={book.volumeInfo.infoLink}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            View\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            data-value={book.id}\r\n            onClick={handleClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n  } else if (books === \"No Results\") {\r\n    booksToRender = <div>No Results</div>;\r\n  } else {\r\n    booksToRender = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container results\" style={{ marginBottom: \"8px\" }}>\r\n      {books ? booksToRender : <p></p>}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useMemo} from \"react\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport BooksContext from \"../utils/booksContext\";\r\nimport SearchResults from \"../components/SearchResults\";\r\n\r\nexport default function Search() {\r\n  const [books, setBooks] = useState(null);\r\n\r\n  const value = useMemo(() => ({ books, setBooks }), [books, setBooks]);\r\n\r\n  return (\r\n    <div>\r\n      <BooksContext.Provider value={value}>\r\n      <SearchBar />\r\n      <SearchResults />\r\n      </BooksContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Hero from './components/Hero';\nimport Nav from './components/Nav';\nimport Saved from './pages/Saved';\nimport Search from './pages/Search';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Nav />\n      <Hero />\n      <Switch>\n      <Route exact path=\"/\" component={Search} />\n      <Route path=\"/saved\" component={Saved} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'spectre.css/dist/spectre.min.css';\nimport 'spectre.css/dist/spectre-icons.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}